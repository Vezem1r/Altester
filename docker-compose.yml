services:
  auth-service:
    container_name: auth-service_container
    build:
      context: ./auth-service
    env_file:
      - .env
    environment:
      - TZ=Europe/Prague
    depends_on:
      - db
    networks:
      - internal
    volumes:
      - ./logs:/app/logs

  core:
    container_name: core_container
    build:
      context: ./core
    env_file:
      - .env
    environment:
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - NOTIFICATION_SERVICE_URL=${NOTIFICATION_SERVICE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - TZ=Europe/Prague
    depends_on:
      - auth-service
    networks:
      - internal
    ports:
      - "8080:8080"
    volumes:
      - question_images:/app/question-images

  ai-grading-service:
    container_name: ai-grading-service_container
    build:
      context: ./ai-grading-service
    env_file:
      - .env
    environment:
      - TZ=Europe/Prague
    depends_on:
      - core
      - db
    networks:
      internal:
    volumes:
      - ./logs:/app/logs

  db:
    image: postgres:15
    container_name: postgres_container
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SPRING_DATASOURCE_DB}
      TZ: Europe/Prague
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:7-alpine
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - internal
    command: redis-server --save 60 1 --loglevel warning
    environment:
      - TZ=Europe/Prague

  notification-service:
    container_name: notification-service_container
    build:
      context: ./notification-service
    env_file:
      - .env
    environment:
      - TZ=Europe/Prague
    depends_on:
      - core
    networks:
      - internal
    ports:
      - "8082:8082"
    volumes:
      - ./logs:/app/logs

  chat-service:
    container_name: chat-service_container
    build:
      context: ./chat-service
    env_file:
      - .env
    environment:
      - TZ=Europe/Prague
    depends_on:
      - core
    networks:
      - internal
    ports:
      - "8083:8083"
    volumes:
      - ./logs:/app/logs

networks:
  internal:
    driver: bridge

volumes:
  postgres_data:
  question_images:
  redis_data: