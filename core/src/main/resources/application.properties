spring.application.name=Altester Core Service
#
# Database configuration
spring.datasource.url=jdbc:postgresql://${SPRING_DATASOURCE_HOST}:${SPRING_DATASOURCE_PORT}/${SPRING_DATASOURCE_DB}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
#
# Logging level
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
#
# Cors
cors.allowed.origins=${ALLOWED_ORIGINS}
#
#
#Password for admin and user
admin.password=${ADMIN_PASSWORD}
default.password=${BASE_PASSWORD}
test.student.password=${BASE_STUDENT_PASS}
test.teacher.password=${BASE_TEACHER_PASS}
#
spring.jpa.show-sql=false
#
# swagger-ui custom path
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
swagger.enabled=${SWAGGER_ENABLED}
#
# JWT secret key
security.jwt.secret-key =${JWT_SECRET_KEY}
api-key.encryption.secret=${API_SECRET_KEY}
INTERNAL_API_KEY=${INTERNAL_API_KEY}
#
spring.config.import=optional:file:.env[.properties]

# Semester dates as per your specification
app.semester.winter-start=${APP_SEMESTER_WINTER_START}
app.semester.winter-end=${APP_SEMESTER_WINTER_END}
app.semester.summer-start=${APP_SEMESTER_SUMMER_START}
app.semester.summer-end=${APP_SEMESTER_SUMMER_END}

auth.mode=${AUTH_MODE:ALL}

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

app.upload.question-images=/app/question-images

spring.web.resources.static-locations=file:${app.upload.question-images}/
spring.mvc.static-path-pattern=/question-images/**
spring.web.resources.cache.period=3600

# Redis Configuration
redis.host=${REDIS_HOST}
redis.port=${REDIS_PORT}
redis.ttl=${REDIS_TTL}
spring.data.redis.repositories.enabled= false

# AI Model Configuration
ai.models.openai=${AI_MODELS_OPENAI}
ai.models.anthropic=${AI_MODELS_ANTHROPIC}
ai.models.deepseek=${AI_MODELS_DEEPSEEK}
ai.models.gemini=${AI_MODELS_GEMINI}

prompt.teacher.max-count=${PROMPT_TEACHER_MAX_COUNT}
prompt.token.max-count=${PROMPT_TOKEN_MAX_COUNT}

